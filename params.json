{"name":"Thinktecture IdentityServer v3","tagline":"OpenID Connect and OAuth2 based security token service","body":"# Thinktecture IdentityServer v3 #\r\n\r\n**current status: preview 1**\r\n\r\n## Overview ##\r\n\r\nIdSrv3 is a .NET-based open source implementation of an OpenID Connect provider and OAuth2 authorization server.\r\n\r\n[http://openid.net/specs/openid-connect-core-1_0.html](http://openid.net/specs/openid-connect-core-1_0.html \"OpenID Connect specification\")\r\n\r\n[http://tools.ietf.org/html/rfc6749](http://tools.ietf.org/html/rfc6749 \"OAuth2 specification\")\r\n\r\n\r\n**Endpoints:**\r\n\r\n* **/connect/authorize** - OpenID Connect/OAuth2 code and implicit client support\r\n* **/connect/token** - OpenID Connect/OAuth2 code, password, client credentials and assertion grant support\r\n* **/connect/userinfo** - OpenID Connect userinfo endpoint\r\n* **/connect/logout** - client initiated logout (aka end session endpoint)\r\n* **/.well-known/openid-configuration** - OpenID Connect discovery endpoint\r\n\r\n## Getting started ##\r\nWe currently don't provide a setup tool or a UI. This release is meant to test drive the authorization/token engine. But it is remarkably easy to setup. Start with downloading/cloning the repo. Open the solution in Visual Studio and start it. Use the various clients in the samples folder to exercise the various flows.\r\n\r\nIdSrv3 is designed as an OWIN/Katana component. The following configuration gives you a minimal implementation with in-memory repositories and user authentication (username must always equal password).\r\n\r\n\tpublic void Configuration(IAppBuilder app)\r\n\t{\r\n\t    app.Map(\"/core\", coreApp =>\r\n\t        {\r\n\t            var factory = TestOptionsFactory.Create(\r\n\t                issuerUri:         \"https://idsrv3.com\",\r\n\t                siteName:          \"Thinktecture IdentityServer v3 - preview 1\",\r\n\t                certificateName:   \"CN=idsrv3test\",\r\n\t                publicHostAddress: \"http://localhost:3333\");\r\n\t                    \r\n\t            var options = new IdentityServerCoreOptions\r\n\t            {\r\n\t                Factory = factory,\r\n\t            };\r\n\t\r\n\t            coreApp.UseIdentityServerCore(options);\r\n\t        });\r\n\t}\r\n\r\nYou can find the *CN=idsrv3test* certificate and setup instructions in the [certificates](https://github.com/thinktecture/Thinktecture.IdentityServer.v3/tree/master/samples/Certificates) folder in the repository.\r\n\r\nIf you want to plugin a real user storage system, we provide out of the box support for MembershipReboot and ASP.NET identity - simply uncomment the UserService assignment.\r\n\r\n\tpublic void Configuration(IAppBuilder app)\r\n    {\r\n        app.Map(\"/core\", coreApp =>\r\n            {\r\n                var factory = TestOptionsFactory.Create(\r\n                    issuerUri: \"https://idsrv3.com\",\r\n                    siteName: \"Thinktecture IdentityServer v3 - preview 1\",\r\n                    certificateName: \"CN=idsrv3test\",\r\n                    publicHostAddress: \"http://localhost:3333\");\r\n\r\n                //factory.UserService = Thinktecture.IdentityServer.MembershipReboot.UserServiceFactory.Factory;\r\n                //factory.UserService = Thinktecture.IdentityServer.AspNetIdentity.UserServiceFactory.Factory;\r\n\r\n                var options = new IdentityServerCoreOptions\r\n                {\r\n                    Factory = factory,\r\n                };\r\n\r\n                coreApp.UseIdentityServerCore(options);\r\n            });\r\n    }\r\n\r\nTo support social logins, you can simply add existing OWIN/Katana middleware to the IdSrv3 configuration:\r\n\r\n\tpublic void Configuration(IAppBuilder app)\r\n    {\r\n        app.Map(\"/core\", coreApp =>\r\n            {\r\n                var factory = TestOptionsFactory.Create(\r\n                    issuerUri: \"https://idsrv3.com\",\r\n                    siteName: \"Thinktecture IdentityServer v3 - preview 1\",\r\n                    certificateName: \"CN=idsrv3test\",\r\n                    publicHostAddress: \"http://localhost:3333\");\r\n\r\n                //factory.UserService = Thinktecture.IdentityServer.MembershipReboot.UserServiceFactory.Factory;\r\n                //factory.UserService = Thinktecture.IdentityServer.AspNetIdentity.UserServiceFactory.Factory;\r\n\r\n                var options = new IdentityServerCoreOptions\r\n                {\r\n                    Factory = factory,\r\n                    SocialIdentityProviderConfiguration = ConfigureSocialIdentityProviders\r\n                };\r\n\r\n                coreApp.UseIdentityServerCore(options);\r\n            });\r\n    }\r\n\r\n    public static void ConfigureSocialIdentityProviders(IAppBuilder app, string signInAsType)\r\n    {\r\n        var google = new GoogleAuthenticationOptions\r\n        {\r\n            AuthenticationType = \"Google\",\r\n            SignInAsAuthenticationType = signInAsType\r\n        };\r\n        app.UseGoogleAuthentication(google);\r\n\r\n        var fb = new FacebookAuthenticationOptions\r\n        {\r\n            AuthenticationType = \"Facebook\",\r\n            SignInAsAuthenticationType = signInAsType,\r\n            AppId = \"67...8\",\r\n            AppSecret = \"9....3\"\r\n        };\r\n        app.UseFacebookAuthentication(fb);\r\n    }\r\n    ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}